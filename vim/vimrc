" Init Plug
if empty(glob('~/.local/share/nvim/site/autoload/plug.vim'))
   !curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

source ~/.vim/plugins.vim

set clipboard=unnamed
set colorcolumn=+1
set expandtab
set linebreak
set list
set mouse=a
set mousefocus
set nobackup
set noswapfile
set number
set numberwidth=5
set shiftwidth=2
set smartcase
set softtabstop=2
set cursorline cursorcolumn
set splitbelow splitright
set tabstop=2
set termguicolors
set textwidth=80
set wildmenu
set wildmode=longest:full,full
set winwidth=79 winheight=5 winminheight=5 winheight=999

" Undo
silent !mkdir ~/.vim/undodir > /dev/null 2>&1
set undofile
set undodir=~/.vim/undodir

" Session management
let g:session_directory = "~/.config/nvim/session"
let g:session_autoload = "no"
let g:session_autosave = "no"
let g:session_command_aliases = 1

" Fold
set foldenable
set foldmethod=syntax
set foldlevelstart=20

if exists("+spelllang")
  set spelllang=en_us
endif

command! -bang W w
command! -bang Q q
command! -bang Qa qa
command! -bang Wq wq
command! -bang Wqa wqa

" REST OF FILE CONTAINS MAPPINGS
let mapleader = " "
let maplocalleader = ","

nmap < [
nmap > ]
omap < [
omap > ]
xmap < [
xmap > ]

set pastetoggle=<F9>

"" qq to record Q to replay
nmap Q @q
nnoremap Q @q

"" Quickfix
nnoremap ]q :cnext<cr>zz
nnoremap [q :cprev<cr>zz
nnoremap ]l :lnext<cr>zz
nnoremap [l :lprev<cr>zz

"" Moving lines
nnoremap <silent> <A-Up> :move-2<cr>
nnoremap <silent> <A-Down> :move+<cr>
nnoremap <silent> <A-Left> <<
nnoremap <silent> <A-Right> >>
xnoremap <silent> <A-Up> :move-2<cr>gv
xnoremap <silent> <A-Down> :move'>+<cr>gv
xnoremap <silent> <A-Left> <gv
xnoremap <silent> <A-Right> >gv
xnoremap < <gv
xnoremap > >gv

" ctrl+l redraws the screen and removes any search highlighting
nnoremap <silent> <leader>L :nohl<CR><C-l>

" <leader>c Close quickfix
nnoremap <leader>c :cclose<bar>lclose<bar>pclose<cr>

nmap <Leader>- :sp<CR>
nmap <Leader>= :vsp<CR>

" Navigate splits
map <C-h> <C-w>h
map <C-l> <C-w>l
map <C-k> <C-w>k
map <C-j> <C-w>j

" ZenCoding
let g:user_emmet_expandabbr_key = '<c-space>'

" open files in directory of current file
cnoremap %% <c-r>=expand('%:h').'/'<cr>

" Ayu theme, one of: "light" | "mirage" | "dark"
let ayucolor="mirage"
colorscheme ayu

" GitGutter
set signcolumn=yes
set updatetime=250

" IndentLine
let g:indentLine_char = '▏'
let g:indentLine_first_char = '▏'
let g:indentLine_showFirstIndentLevel = 1
let g:indentLine_setColors = 0

" Airline
let g:airline_section_b = ""
let g:airline_skip_empty_sections = 1

" Recursice remove
let g:netrw_localrmdir = "rm -rf"
let g:netrw_bufsettings = "noma namod nu rnu nobl nowrap ro"

" Ag command line option
let g:ag_prg="ag --vimgrep --smart-case"

" FZF
let $FZF_DEFAULT_OPTS .= ' --inline-info'
nnoremap <silent> <Leader>P :Commands<CR>
nnoremap <silent> <Leader>p :GFiles<CR>
nnoremap <silent> <Leader>o :Files<CR>
nnoremap <silent> <Leader>: :History:<CR>
nnoremap <silent> <Leader>/ :History/<CR>
nnoremap <silent> <Leader>h :History<CR>

"
" Hide statusline of terminal buffer
autocmd! FileType fzf
autocmd  FileType fzf set laststatus=0 noshowmode noruler
  \| autocmd BufLeave <buffer> set laststatus=2 showmode ruler

let g:fzf_layout = { 'window': 'enew' }
let g:fzf_layout = { 'window': '-tabnew' }
let g:fzf_layout = { 'window': '10split enew' }
let g:fzf_colors =
	\ { 
	\ 'fg':      ['fg', 'Normal'],
  \ 'bg':      ['bg', 'Normal'],
  \ 'hl':      ['fg', 'Comment'],
  \ 'fg+':     ['fg', 'CursorLine', 'CursorColumn', 'Normal'],
  \ 'bg+':     ['bg', 'CursorLine', 'CursorColumn'],
  \ 'hl+':     ['fg', 'Statement'],
  \ 'info':    ['fg', 'PreProc'],
  \ 'border':  ['fg', 'Ignore'],
  \ 'prompt':  ['fg', 'Conditional'],
  \ 'pointer': ['fg', 'Exception'],
  \ 'marker':  ['fg', 'Keyword'],
  \ 'spinner': ['fg', 'Label'],
  \ 'header':  ['fg', 'Comment'] }

set hidden

" ALE stuff
let g:ale_fix_on_save = 1
let g:ale_completion_enabled = 1
let g:ale_open_list = 1
let g:ale_keep_list_window_open = 1

let g:ale_elixir_elixir_ls_release = '/elixir-ls'

let g:ale_linters = {
  \ 'javascript': ['eslint', 'flow-language-server'],
  \ 'typescript': ['eslint', 'tslint', 'tsserver'],
  \ 'python': ['flake8', 'pyls'],
  \ 'elixir': ['elixir-ls'],
  \ 'html': []
  \}

let g:ale_fixers = {
  \ 'javascript': ['eslint', 'prettier'],
  \ 'typescript': ['prettier', 'tsserver'],
  \ 'python': ['autopep8'],
  \ }

map gd <Plug>(ale_go_to_definition)<CR>
map <c-g>  <Plug>(ale_go_to_definition_in_tab)<CR>
map <F12> <Plug>(ale_find_references)<CR>
map K <Plug>(ale_hover)
nnoremap <Leader>s :%s/\<<C-r><C-w>\>/

let g:SuperTabDefaultCompletionType = ""
set completeopt=menuone,longest,preview,noinsert

" Allow per project .nvimrc file to load
set exrc
